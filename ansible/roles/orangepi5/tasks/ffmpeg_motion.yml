---

- name: Install packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - tzdata
    - curl
    - htop
    - git
    - tmux
    - lsof
    - python3
    - python3-numpy
    - nginx
    - nginx-extras
    # motion required
    - autoconf
    - automake
    - autopoint
    - build-essential
    - pkg-config
    - libtool
    - libzip-dev
    - libjpeg-dev
    - libwebp-dev
    - libsqlite3-dev
    - gettext
    - libmicrohttpd-dev
    - unzip
    # systemd.journal python package
    - libsystemd-dev
    - python3-pip
    # nfs mount shared from orangepizero2
    - nfs-common
    # ffmpeg rkmpp hardware decoder
    - libyuv-dev
    - librga2
    - librga-dev 
    - librockchip-mpp-dev 
  become: true
  tags:
    - apt

# from armibian page - Enable 3D Acceleration (Ubuntu variant only)
# not sure need these repositories
# sudo add-apt-repository ppa:liujianfeng1994/panfork-mesa
# sudo add-apt-repository ppa:liujianfeng1994/rockchip-multimedia
# sudo apt update
# sudo apt install mali-g610-firmware rockchip-multimedia-config


# doesnt work for whatever reason
# - name: Create temporary build directory for ffmpeg and motion build
#   tempfile:
#     state: directory
#     suffix: build
#   register: tmp_dir

- name: Copy install scripts ffmpeg and motion
  copy:
    src: "{{ item }}"
    dest: "{{ build_folder }}"
    mode: 0777
  loop:
    - ffmpeg_build.sh
    - motion_build.sh
    - RTSP_lower_transport_TCP.patch
    - time_t.patch
  tags:
    - build

- name: Build ffmpeg
  shell: "{{ build_folder }}/ffmpeg_build.sh"
  tags:
    - build

- name: Install ffmpeg library
  shell: |
    cd "{{ build_folder }}/FFmpeg"
    make install
    ldconfig
  become: true
  tags:
    - install

- name: Build motion
  shell: "{{ build_folder }}/motion_build.sh"
  tags:
    - build

- name: Install motion
  shell: |
    cd "{{ build_folder }}/{{ motion_build_folder }}"
    cp src/motion  /usr/local/bin/motiond
    chmod 777 /usr/local/bin/motiond
  become: true
  tags:
    - install

- name: Install motion_helper.py
  template:
    src: usr/bin/motion_helper.py
    dest: /usr/bin/motion_helper.py
    owner: ubuntu
    group: ubuntu
    mode: 777
  become: true
  ignore_errors: yes
  tags:
    - install

- name: Install motion *.conf and mask files
  template:
    src: "usr/local/etc/motion/{{ item }}"
    dest: /usr/local/etc/motion/
    owner: ubuntu
    group: ubuntu
    mode: 0640
  loop:
    - motion.conf    
    - front_left.conf
    - front_up.conf
    - left_aisle.conf
    - right_aisle.conf
    - broken_static.conf
    - mask_camera_low.pgm
    - mask_camera_street.pgm
  become: true
  tags:
    - config
    - install