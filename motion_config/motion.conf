log_level 6
netcam_userpass admin:gig1684A
# doesn't matter if you use capture_rate smaller than camera FPS h264/h265 
# with fps=10 will probably need all previous frames to decode the current frame
# 4.3.+ uses netcam_params
netcam_params decoder=hevc_nvmpi,rtsp_transport=tcp,framerate=20
width=640
height=360


target_dir /mnt/motion_data

webcontrol_port 8088
webcontrol_localhost off
webcontrol_parms 2
webcontrol_interface 0

stream_localhost off
stream_port 8100 # 8100 # disable by default if needed see on yosee app
#This option determines the method used for displaying images on the webcontrol page.
#0 = Full stream images are sent and scaled by the client to the webcontrol page
#1 = Substream images are sent by Motion. This saves bandwidth
#2 = Static images are sent by Motion and the page must be manually refreshed
#3 = Full stream images and motion images side by side to assist setup of detection
#4 = The source image provided by camera without privacy or other Motion overlays
stream_preview_method 1 # 1 for run 3 for setup (f5 press needed)
stream_preview_newline off
# when with 4 or more streams
# stream_preview_newline on
# 20 for stream_preview_method 3
# 40 for stream_preview_method 4
stream_preview_scale 35
stream_quality 80
stream_grey on
stream_maxrate 5

noise_level 14
noise_tune off

#Picture frames must contain motion at least the specified number of frames in a row before they are detected as true motion.
# since it's 15 fps -> 5  -> 1/3 second of movement -> too low detect too fast? bugs?
# using maximum recommended 
minimum_motion_frames 5 
lightswitch_percent 0

# frame is displayed in the upper right corner of the pictures
text_changes on
# font-size scale
text_scale 1

# Locate and draw a box around the moving object.
# Value 'preview' makes Motion only draw a box on a saved preview
# jpeg image and not on the saved movie.
locate_motion_mode  preview

# when start using motion movies
# When using a RTSP ... create movie files of the motion with the packets obtained directly from the camera.
# This option should reduce CPU usage but does increase memory requirements.
# No image processing is performed so text overlays, privacy masks etc will not be on the resulting video.

movie_output on
# saving events on specific folder for each camera named
movie_filename movies/cam_%$/%Y_%m_%d_%Hh_%Mm_%Ss_cam%t
# (buffered) pictures from before motion was detected that will be output at motion detection
pre_capture 5
post_capture 5
movie_quality 90
# max lengh of motion movie in seconds unlimited 
movie_max_time 0 
# create movie files of the motion with packets directly from the camera
movie_passthrough on

# output motion as a picture on threshold
# generate too many picture almost one for each frame
# picture_output_motion 
picture_output best
# picture showing where was the motion
# good for tunning the system
picture_quality 95
picture_filename pictures/cam_%$/%Y_%m_%d_%Hh_%Mm_%Ss_cam_%t_D%D_frame_%q_xc%K_yc%L_w%i_h%J

timelapse_interval 1 # 1 seconds or more 0 disable
timelapse_mode hourly
timelapse_fps 1
timelapse_filename movies/timelapse/cam_%$/%Y_%m_%d_%Hh_cam_%t_%$

camera kitchen.conf
camera garage.conf
camera frontwall.conf
camera street.conf

# events
# #!/user/bin/python and chmod for exec
# parsing the arguments to take action for 'on_camera_lost' event  
# also passing other parameters
# %t camera id number
# %$ camera name   
# on_camera_lost /home/andre/events.py on_camera_lost %t %s %N
# on_movie_end /home/andre/events.py on_movie_end %t %s %N
# I could send an e-mail